---
- name: create system group
  group:
    name: "{{ pushgateway_system_group }}"
    system: true
    state: present
  when: pushgateway_system_group != "root"
  become: true
  tags: pushgateway

- name: create system user
  user:
    name: "{{ pushgateway_system_user }}"
    system: true
    shell: "/sbin/nologin"
    group: "{{ pushgateway_system_group }}"
    createhome: false
  when: pushgateway_system_user != "root"
  become: true
  tags: pushgateway

- name: check if pushgateway is installed
  stat:
    path: "{{ pushgateway_binary_local_dir }}/pushgateway"
  register: __pushgateway_is_installed
  become: true
  tags: pushgateway

- name: gather currently installed pushgateway version (if any)
  command: "{{ pushgateway_binary_local_dir }}/pushgateway --version"
  args:
    warn: false
  changed_when: false
  register: __pushgateway_current_version_output
  when: __pushgateway_is_installed.stat.exists
  become: true
  tags: pushgateway

- name: download pushgateway binary to local folder
  get_url:
    url: "https://github.com/prometheus/pushgateway/releases/download/v{{ pushgateway_version }}/pushgateway-{{ pushgateway_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}.tar.gz"
    dest: "/tmp/pushgateway-{{ pushgateway_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}.tar.gz"
  environment: "{{proxy_env}}"
  register: _download_binary
  until: _download_binary is succeeded
  retries: 5
  delay: 2
  delegate_to: localhost
  check_mode: false
  become: true
  tags: pushgateway
  when: (not __pushgateway_is_installed.stat.exists) or (__pushgateway_current_version_output.stderr_lines[0].split(" ")[2] != pushgateway_version)

- name: unpack pushgateway binary
  unarchive:
    src: "/tmp/pushgateway-{{ pushgateway_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}.tar.gz"
    dest: "/tmp"
    creates: "/tmp/pushgateway-{{ pushgateway_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}/pushgateway"
  delegate_to: localhost
  check_mode: false
  become: true
  tags: pushgateway
  when: (not __pushgateway_is_installed.stat.exists) or (__pushgateway_current_version_output.stderr_lines[0].split(" ")[2] != pushgateway_version)
  
- name: propagate pushgateway binaries
  copy:
    src: "/tmp/pushgateway-{{ pushgateway_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}/pushgateway"
    dest: "{{ pushgateway_binary_local_dir }}/pushgateway"
    mode: 0755
    owner: "{{ pushgateway_system_user }}"
    group: "{{ pushgateway_system_group }}"
  notify: restart pushgateway
  become: true
  tags: pushgateway
  when:
    - not ansible_check_mode
    - (not __pushgateway_is_installed.stat.exists) or (__pushgateway_current_version_output.stderr_lines[0].split(" ")[2] != pushgateway_version)

- name: copy the pushgateway systemd service file
  template:
    src: pushgateway.service.j2
    dest: /etc/systemd/system/pushgateway.service
    owner: root
    group: root
    mode: 0644
  notify: restart pushgateway
  become: true
  tags: pushgateway

- block:
  - name: create persistence file dir
    file:
      path: "{{ pushgateway_persistence_dir }}"
      state: directory
      owner: "{{ pushgateway_system_user }}"
      group: "{{ pushgateway_system_group }}"
      mode: 0755
    become: true
    tags: pushgateway

  - name: create persistence file
    file:
      path: "{{ pushgateway_persistence_dir }}/persistence"
      state: touch
      owner: "{{ pushgateway_system_user }}"
      group: "{{ pushgateway_system_group }}"
      mode: 0640
    register: touch_log
    changed_when: touch_log.diff.before.state != "file"  # Needed for idempotance (https://github.com/ansible/ansible/issues/30226)
    become: true
    tags: pushgateway
  when: pushgateway_persistence

- name: ensure service is started and enabled
  systemd:
    daemon_reload: true
    name: pushgateway
    enabled: true
  become: true
  tags: pushgateway